{"version":3,"sources":["redux/reducer.js","components/AppHeader/AppHeader.js","components/TodoList/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/TodoSettings/ItemFilter/ItemFilter.js","components/TodoSettings/SearchPanel/SearchPanel.js","components/TodoSettings/TodoSettings.js","components/ItemAddForm/ItemAddForm.js","App.js","helpers.js","index.js"],"names":["initialState","AppHeader","props","countOfDoneTasks","todos","filter","item","isDone","length","countOfActiveTasks","className","TodoItem","classNames","checked","isImportant","type","defaultChecked","onClick","onDone","id","text","onImportant","onDelete","TodoList","todoComponents","map","ItemFilter","activeClassButton","inActiveClassButton","showAll","showingAllTasks","showActive","showingActiveTasks","showDone","showingDoneTasks","SearchPanel","onChange","e","sortTasks","target","value","searchText","placeholder","TodoSettings","ItemAddForm","onSubmit","preventDefault","onAdd","inputText","onInputChange","connect","state","visibleTodos","dispatch","addTask","sortText","storage","key","data","JSON","parse","localStorage","getItem","setItem","stringify","taskID","store","createStore","action","newState","toLowerCase","indexOf","app","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.68e9fa4e.chunk.js","sourcesContent":["import { storage } from '../helpers'\r\nlet taskID = 1000;\r\n\r\nlet initialState;\r\n\r\nif (storage('$$state')) {\r\n  initialState = storage('$$state')\r\n} else {\r\n  initialState = {\r\n    todos: [\r\n      { id: 0, text: 'Task1', isImportant: false, isDone: false },\r\n      { id: 1, text: 'Task2', isImportant: true, isDone: true },\r\n      { id: 2, text: 'Task3', isImportant: true, isDone: false },\r\n      { id: 3, text: 'Task4', isImportant: false, isDone: true },\r\n    ],\r\n    visibleTodos: [\r\n      { id: 0, text: 'Task1', isImportant: false, isDone: false },\r\n      { id: 1, text: 'Task2', isImportant: true, isDone: true },\r\n      { id: 2, text: 'Task3', isImportant: true, isDone: false },\r\n      { id: 3, text: 'Task4', isImportant: false, isDone: true },\r\n    ],\r\n    inputText: '',\r\n    searchText: '',\r\n    showingAllTasks: true,\r\n    showingActiveTasks: false,\r\n    showingDoneTasks: false,\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  const newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case 'DELETE_TASK':\r\n      newState.todos = newState.todos.filter(item => item.id !== action.id);\r\n      newState.visibleTodos = newState.visibleTodos.filter(item => item.id !== action.id);\r\n      storage('$$state', newState);\r\n      return newState;\r\n\r\n    case 'ADD_TASK':\r\n      if (state.inputText !== '') {\r\n        taskID += 1;\r\n        newState.todos = [...state.todos, { id: taskID, text: state.inputText, isImportant: false }];\r\n        newState.visibleTodos = [...state.todos, { id: taskID, text: state.inputText, isImportant: false }];\r\n        newState.inputText = '';\r\n        newState.searchText = '';\r\n        storage('$$state', newState);\r\n        return newState;\r\n      }\r\n      storage('$$state', newState);\r\n      return newState;\r\n\r\n    case 'TOGGLE_IPMORTANT':\r\n      newState.visibleTodos = newState.visibleTodos.map(item => {\r\n        if (item.id === action.id) {\r\n          return {\r\n            id: item.id,\r\n            text: item.text,\r\n            isDone: item.isDone,\r\n            isImportant: !item.isImportant,\r\n          }\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      newState.todos = newState.todos.map(item => {\r\n        if (item.id === action.id) {\r\n          return {\r\n            id: item.id,\r\n            text: item.text,\r\n            isDone: item.isDone,\r\n            isImportant: !item.isImportant,\r\n          }\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      storage('$$state', newState);\r\n      return newState;\r\n\r\n    case 'TOGGLE_DONE':\r\n      newState.todos = state.todos.map(item => {\r\n        if (item.id === action.id) {\r\n          return {\r\n            id: item.id,\r\n            text: item.text,\r\n            isImportant: item.isImportant,\r\n            isDone: !item.isDone,\r\n          }\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      newState.visibleTodos = state.visibleTodos.map(item => {\r\n        if (item.id === action.id) {\r\n          return {\r\n            id: item.id,\r\n            text: item.text,\r\n            isImportant: item.isImportant,\r\n            isDone: !item.isDone,\r\n          }\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      storage('$$state', newState);\r\n      return newState;\r\n\r\n    case 'INPUT_CHANGE':\r\n      newState.inputText = action.inputText;\r\n      storage('$$state', newState);\r\n      return newState;\r\n\r\n    case 'SORT_TASKS':\r\n      newState.searchText = action.sortText;\r\n      newState.visibleTodos = newState.todos.filter(item => {\r\n        return item.text.toLowerCase().indexOf(newState.searchText.toLowerCase()) > -1\r\n      })\r\n      if (newState.showingActiveTasks) {\r\n        newState.visibleTodos = newState.visibleTodos.filter(item => !item.isDone)\r\n      }\r\n      if (newState.showingDoneTasks) {\r\n        newState.visibleTodos = newState.visibleTodos.filter(item => item.isDone)\r\n      }\r\n      storage('$$state', newState);\r\n      return newState;\r\n\r\n    case 'SHOW_ALL':\r\n      newState.visibleTodos = newState.todos;\r\n      newState.showingAllTasks = true;\r\n      newState.showingActiveTasks = false;\r\n      newState.showingDoneTasks = false;\r\n      storage('$$state', newState);\r\n      return newState;\r\n\r\n    case 'SHOW_ACTIVE':\r\n      newState.visibleTodos = newState.todos.filter(item => !item.isDone);\r\n      newState.showingAllTasks = false;\r\n      newState.showingActiveTasks = true;\r\n      newState.showingDoneTasks = false;\r\n      storage('$$state', newState);\r\n      return newState;\r\n\r\n    case 'SHOW_DONE':\r\n      newState.visibleTodos = newState.todos.filter(item => item.isDone);\r\n      newState.showingAllTasks = false;\r\n      newState.showingActiveTasks = false;\r\n      newState.showingDoneTasks = true;\r\n      storage('$$state', newState);\r\n      return newState;\r\n    default:\r\n      return newState;\r\n  }\r\n}","import React from 'react';\r\nimport './AppHeader.css'\r\nconst AppHeader = (props) => {\r\n  // console.log(props);\r\n\r\n  const countOfDoneTasks = props.todos.filter(item => item.isDone).length;\r\n  const countOfActiveTasks = props.todos.filter(item => !item.isDone).length;\r\n  return (\r\n    < header className=\"header\">\r\n      <h1 className=\"display-3\">ToDo APP</h1>\r\n      <div className=\"header-statistics\">\r\n        <p>Count of active tasks {countOfActiveTasks}</p>\r\n        <p >Count of completed tasks {countOfDoneTasks}</p>\r\n      </div>\r\n    </header >\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default AppHeader;\r\n\r\n","import React from 'react';\r\nimport './TodoItem.css'\r\n\r\nconst TodoItem = (props) => {\r\n  // console.log(props);\r\n\r\n  let classNames = 'todo-list__item';\r\n  let checked = false;\r\n  if (props.isImportant) {\r\n    classNames += ' important';\r\n  }\r\n\r\n  if (props.isDone) {\r\n    classNames += ' isDOne';\r\n    checked = 'checked'\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"taskInfo\">\r\n        <input type=\"checkbox\" defaultChecked={checked} onClick={() => props.onDone(props.id)} className=\"form-check-input\"></input>\r\n        <span className={classNames} >{props.text}</span>\r\n      </div>\r\n      <div className=\"list-item__control\">\r\n        <button type=\"button\" className=\"btn btn-outline-success\" onClick={() => props.onImportant(props.id)}>\r\n          <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n\r\n        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={() => { props.onDelete(props.id) }}>\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport './TodoList.css'\r\nimport TodoItem from './TodoItem/TodoItem'\r\n\r\nconst TodoList = (props) => {\r\n  const todoComponents = props.todos.map(item => {\r\n    return (\r\n      <li key={item.id} className=\"list-group-item list__item\">\r\n        <TodoItem text={item.text}\r\n          id={item.id}\r\n          isImportant={item.isImportant}\r\n          isDone={item.isDone}\r\n          onDelete={props.onDelete}\r\n          onDone={props.onDone}\r\n          onImportant={props.onImportant}\r\n        />\r\n      </li>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {todoComponents}\r\n    </ul>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nconst ItemFilter = (props) => {\r\n\r\n  const activeClassButton = 'btn btn-info';\r\n  const inActiveClassButton = 'btn btn-outline-secondary';\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={props.showAll} className={props.showingAllTasks ? activeClassButton : inActiveClassButton}>All</button>\r\n      <button onClick={props.showActive} className={props.showingActiveTasks ? activeClassButton : inActiveClassButton}>Active</button>\r\n      <button onClick={props.showDone} className={props.showingDoneTasks ? activeClassButton : inActiveClassButton}>Done</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemFilter;\r\n","import React from 'react';\r\n\r\nconst SearchPanel = (props) => {\r\n  const onSortTasks = (e) => {\r\n    props.sortTasks(e.target.value);\r\n  }\r\n  return (\r\n    <input className='searchInput form-control' onChange={onSortTasks} value={props.searchText} placeholder='type to search...'></input>\r\n  )\r\n}\r\n\r\nexport default SearchPanel;\r\n","import React from 'react';\r\nimport ItemFilter from './ItemFilter/ItemFilter';\r\nimport SearchPanel from './SearchPanel/SearchPanel';\r\nimport './TodoSettings.css'\r\n\r\nconst TodoSettings = (props) => {\r\n  return (\r\n    <div className=\"todoSettings\">\r\n      <SearchPanel sortTasks={props.sortTasks}\r\n        searchText={props.searchText} />\r\n      <ItemFilter\r\n        showAll={props.showAll}\r\n        showActive={props.showActive}\r\n        showDone={props.showDone}\r\n        showingAllTasks={props.showingAllTasks}\r\n        showingActiveTasks={props.showingActiveTasks}\r\n        showingDoneTasks={props.showingDoneTasks} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoSettings;","import React from 'react';\r\nimport './ItemAddForm.css'\r\n\r\nconst ItemAddForm = (props) => {\r\n  const onInputChange = (e) => {\r\n    props.onInputChange(e.target.value)\r\n  }\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.onAdd();\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onFormSubmit} className=\"item-add-form d-flex\">\r\n      <input className=\"formInput form-control\" value={props.inputText} type=\"text\" onChange={onInputChange} placeholder='What needs to be done'></input>\r\n      <button className=\"formSubmitBtn btn btn-success\">Add</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ItemAddForm;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AppHeader from './components/AppHeader/AppHeader';\r\nimport TodoList from './components/TodoList/TodoList';\r\nimport TodoSettings from './components/TodoSettings/TodoSettings';\r\nimport ItemAddForm from './components/ItemAddForm/ItemAddForm'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.todos,\r\n    inputText: state.inputText,\r\n    searchText: state.searchText,\r\n    visibleTodos: state.visibleTodos,\r\n    showingAllTasks: state.showingAllTasks,\r\n    showingActiveTasks: state.showingActiveTasks,\r\n    showingDoneTasks: state.showingDoneTasks,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDelete: (id) => dispatch({ type: 'DELETE_TASK', id }),\r\n  onAdd: (text) => dispatch({ type: 'ADD_TASK', text }),\r\n  onImportant: (id) => dispatch({ type: 'TOGGLE_IPMORTANT', id }),\r\n  onDone: (id) => dispatch({ type: 'TOGGLE_DONE', id }),\r\n  onInputChange: (inputText) => dispatch({ type: 'INPUT_CHANGE', inputText }),\r\n  addTask: () => dispatch({ type: 'ADD_TASK' }),\r\n  sortTasks: (sortText) => dispatch({ type: 'SORT_TASKS', sortText }),\r\n  showAll: () => dispatch({ type: 'SHOW_ALL' }),\r\n  showActive: () => dispatch({ type: 'SHOW_ACTIVE' }),\r\n  showDone: () => dispatch({ type: 'SHOW_DONE' }),\r\n})\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <>\r\n      <AppHeader todos={props.visibleTodos}\r\n      />\r\n      <main>\r\n        <TodoSettings\r\n          sortTasks={props.sortTasks}\r\n          searchText={props.searchText}\r\n          showAll={props.showAll}\r\n          showActive={props.showActive}\r\n          showDone={props.showDone}\r\n          showingAllTasks={props.showingAllTasks}\r\n          showingActiveTasks={props.showingActiveTasks}\r\n          showingDoneTasks={props.showingDoneTasks}\r\n        />\r\n        <TodoList\r\n          todos={props.visibleTodos}\r\n          onDelete={props.onDelete}\r\n          onDone={props.onDone}\r\n          onImportant={props.onImportant} />\r\n        <ItemAddForm\r\n          onInputChange={props.onInputChange}\r\n          onAdd={props.onAdd}\r\n          addTask={props.addTask}\r\n          inputText={props.inputText} />\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","export const storage = (key, data = null) => {\r\n  if (!data) {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  }\r\n  localStorage.setItem(key, JSON.stringify(data));\r\n  return undefined;\r\n};","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App';\r\nimport { createStore } from 'redux';\r\nimport reducer from './redux/reducer';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = createStore(reducer);\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n)\r\n\r\nReactDom.render(app, document.querySelector('#root'))\r\n"],"sourceRoot":""}